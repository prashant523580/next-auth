import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { useSession } from 'next-auth/react'
import type { NextPage } from 'next'
import Layout from '@/components/Layout/Layout'
import Loader from '@/components/Loader'
import React from "react";
import DashboardProtected from './Dashboard'
import { useSelector } from 'react-redux'
import { RootState } from '@/redux/store/store'
const  Home  : NextPage = ({token} :any) =>  {
  // const [session,setSession] = React.useState(false);
  const [loading,setLoading] = React.useState(true);
  const {user,authenticate}= useSelector((state :RootState) => state.user)
    React.useEffect(() => {
        // setLoading(true);
        setInterval(() => {
            setLoading(false)
        },300);
       if(!authenticate){
          console.log(user)
       }
    },[])
    const {data: session} = useSession();
  

  // if(session){
  //   console.log(session)
  //   return(
  //     <>
  //       Signed as {session?.user?.email} <br/>
  //       <button onClick={() => signOut()}> signout </button>
  //     </>
  //   )
  // }
  return (
    loading ? <Loader/> : 
    <Layout>

      <Head>
        <title>Next Auth</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
   
        {/* <div className={styles.center}>
       
          <div className={styles.thirteen}>
            next-auth
          </div>
        </div> */}

        <div className={styles.grid}>
         <div>
          {
            session ?  
            <>
            {/* <DashboardProtected/>  */}
            <div>
              <div className="relative">
                { session?.user?.image && <Image src={session?.user?.image} width={100} height={100}  alt="profile"/>}
              </div>
            <p>Name: {session?.user?.name}</p>
              <p> Signed as {session?.user?.email} </p>
              {/* <p>  {session?.user?.image} </p> */}
            {/* <button className='bg-gray-800 text-white rounded-sm px-3 py-2' onClick={() => signOut()}> signout </button> */}
            </div>
            </> 
            :
            
              token ? 
              <div> 
                  <h1>{user.firstname + " " + user.lastname}</h1>
                  <h1>sign in as {user.email}</h1>
              </div>
              :
              <div>
                <h1>Unauthorized {'\:\('} </h1>
              {/* <button onClick={() => signIn()}>Login</button> */}
              </div>
            }
          
         </div>
        </div>
      </main>
    </Layout>
   
  )
}

export default Home